def tuples(elems, n):
    """
    List of all possible tuples of length ``n``
    of with values from the list ``elems``.
    
    Example:
    >>> tuples([0, 1], 3)
    [(0, 0, 0), (0, 0, 1), (0, 1, 0), (0, 1, 1),
     (1, 0, 0), (1, 0, 1), (1, 1, 0), (1, 1, 1)]
    """
    pass

def subsets(elems, n=0):
    """
    List of all possible subsets of ``elems`` of length
    ``n`` (if equal 0, then all possible subsets).
    
    Example:
    >>> subsets([0, 1, 2])
    [[], [0], [1], [2], [1, 2], [1, 3], [2, 3], [1, 2, 3]]
    >>> subsets([0, 1, 2], n=3)
    [[1, 2, 3]]
    """
    pass
    
def outer(*lists):
    """
    Outer product of lists given as arguments,
    i.e. all tuples where the first element takes
    values from the first list, second elemen takes
    value from the second list, etc.
    
    Examples:
    >>> outer([0, 1], ['a', 'b', 'c'])
    [(0, 'a'), (0, 'b'), (0, 'c'),
     (1, 'a'), (1, 'b'), (1, 'c')]
    >>> outer([0, 1], [True, False], ['a', 'b'])
    [(0, True, 'a'), (0, True, 'b'), (0, False, 'a'), (0, False, 'b'),
     (1, True, 'a'), (1, True, 'b'), (1, False, 'a'), (1, False, 'b')]
    """
    pass